<?php

declare(strict_types=1);

namespace {{ namespace }};

use IBroStudio\ModuleHelper\Exceptions\ValidationException;
use PrestaShop\Module\{{ ModuleName }}\Config\{{ ModuleName }}Config;
use PrestaShop\PrestaShop\Core\Configuration\DataConfigurationInterface;

final class DummyClass implements DataConfigurationInterface
{
    public function getConfiguration(): array
    {
        return {{ ModuleName }}Config::values();
    }

    public function updateConfiguration(array $configuration): array
    {
        $errors = [];

        if ($this->validateConfiguration($configuration)) {
            foreach ($configuration as $key => $value) {
                try {
                    {{ ModuleName }}Config::from($key)
                        ->validate($value)
                        ->set($value);
                } catch (ValidationException $e) {
                    $errors[] = $e->getMessage();
                }
            }
        }

        return $errors;
    }

    public function validateConfiguration(array $configuration): bool
    {
        return count(
            array_diff_key(
                $configuration,
                array_flip(
                    array_column({{ ModuleName }}Config::cases(), 'value')
                )
            )
        ) === 0;
    }
}
